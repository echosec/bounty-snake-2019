name: Builds and deploys the container

on:
  # Trigger the workflow on push but only for the master branch
  push:
    branches:
      - master
      - terraform-do-droplet-on-merge

jobs:
  build_deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Get the short SHA of the commit
        id: vars
        run: |
          IMAGE_TAG=$(git rev-parse --short=7 $GITHUB_SHA)
          echo ::set-output name=image_tag::$IMAGE_TAG
          echo 'IMAGE_TAG:' $IMAGE_TAG
      - name: Publish short SHA tag to GitHub Packages
        uses: matootie/github-docker@v2.2.2
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          imageTag: ${{ steps.vars.outputs.image_tag }}
      - name: Publish latest tag to GitHub Packages
        uses: matootie/github-docker@v2.2.2
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          imageTag: "latest"
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './terraform'
          tf_actions_comment: false
          args: '-backend-config="token=${{ secrets.TF_API_TOKEN }}"'
      - name: Terraform Plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './terraform'
          tf_actions_comment: false
          args: '-var="image_tag=${{ steps.vars.outputs.image_tag }}"'
      - name: Terraform Apply
        if: success()
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './terraform'
          tf_actions_comment: false
          args: '-var="image_tag=${{ steps.vars.outputs.image_tag }}"'
